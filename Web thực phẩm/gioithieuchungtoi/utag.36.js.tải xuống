//~~tv:20010.20140318
//~~tc: Tealium Custom Container

/*
  Tealium Custom Container Notes:
  - Add sending code between "Start Tag Sending Code" and "End Tag Sending Code".
  - Add JavaScript tag library code between "Start Tag Library Code" and "End Tag Library Code".
  - Add JavaScript code only, do not add HTML code in this file.
  - Remove any <script> and </script> tags from the code you place in this file.

  Loading external JavaScript files (Libloader):
  - If you need to load an additional external JavaScript file, un-comment the singe-line JavaScript comments ("//") within the following Libloader sections near the bottom of this file:
      - "Start Libloader Function Call"
      - "End Libloader Function Call"
      - "Start Libloader Callback Function"
      - "End Libloader Callback Function"
  - After un-commenting, insert the path to the external JavaScript file you want to load.
  - Finally, within the Libloader callback function, insert the JavaScript code that should run after the external JavaScript file has loaded.
*/

/* Start Tag Library Code */
/* End Tag Library Code */

/* Start Libloader Library Code */
/* Please Do Not Edit This Section */
if (typeof utag.ut == "undefined") {
  utag.ut = {};
}
utag.ut.libloader2 = function(o, a, b, c, l) {
  a = document;
  b = a.createElement('script');
  b.language = 'javascript';
  b.type = 'text/javascript';
  b.async = true;
  b.src = o.src;
  if (o.id) { b.id = o.id }
  if (typeof o.cb == 'function') {
    b.hFlag = 0;
    b.onreadystatechange = function() {
      if ((this.readyState == 'complete' || this.readyState == 'loaded') && !b.hFlag) {
        b.hFlag = 1;
        o.cb();
      }
    };
    b.onload = function() {
      if (!b.hFlag) {
        b.hFlag = 1;
        o.cb();
      }
    };
  }
  l = o.loc || 'head';
  c = a.getElementsByTagName(l)[0];
  if (c) {
    if (l == 'script') {
      c.parentNode.insertBefore(b, c);
    } else {
      c.appendChild(b);
    }
    utag.DB("Attach to " + l + ": " + o.src);
  }
};
/* End Libloader Library Code */

//tealium universal tag - utag.sender.custom_container ut4.0.201507082146, Copyright 2015 Tealium.com Inc. All Rights Reserved.
try {
  (function(id, loader) {
    var u = utag.o[loader].sender[id] = {};
    u.ev = {'view' : 1};
    u.event_lookup={"product":"product", "login":"login", "prodlist":"prodlist", "cartview":"cartview", "cartempty":"cartempty", "purchase":"purchase"};
    u.initialized = false;
      u.map={"page_type:cart":"cartview","page_type:category":"prodlist","page_type:product":"product","page_category_name":"group_id","product_sku":"product_id"};
  u.extend=[];

    u.send = function(a, b) {
      if (u.ev[a] || typeof u.ev.all != "undefined") {
        //##UTENABLEDEBUG##utag.DB("send:##UTID##");
        var c, d, e, f, i;
	u.data = {
          /* Initialize default tag parameter values here */
          /* Example: */
          /* "account_id" : "1234567" */
          /* A value mapped to "account_id" in TiQ will replace this default value. */
        };

        /* Start Tag-Scoped Extensions Code */
        /* Please Do Not Edit This Section */
        
        /* End Tag-Scoped Extensions Code */

        /* Start Mapping Code */
        for (d in utag.loader.GV(u.map)) {
          if (typeof b[d] != 'undefined') {
            e = u.map[d].split(',');
            for (f = 0; f < e.length; f++) {
              u.data[e[f]] = b[d];
            }
          }
        }
        /* End Mapping Code */

        /* Start Tag Sending Code */
          // Insert your tag sending code here.
        /* End Tag Sending Code */

        /* Start Libloader Callback Function */
        /* Un-comment the single-line JavaScript comments ("//") to use this Libloader callback function. */
        u.myCallback = function() {
          u.initialized = true;
	  for(d in utag.loader.GV(u.map)){if(typeof b[d]!="undefined"&&b[d]!=""){e=u.map[d].split(",");for(f=0;f<e.length;f++){
	    u.data[e[f]]=b[d];
	  }}else{
	    h=d.split(":");if(h.length==2 && b[h[0]]==h[1]){g=""+u.event_lookup[u.map[d]];if(g!=""){b._cevent=g}}
	  }}
          /* Start Libloader Callback Tag Sending Code */
             // Login event.
            if(b._cevent=="login"){
              window.sidecar.logged_in="1";
              window.sidecar.user_email=u.data.user_email || b._ccustid || "";
              if(u.data.new_registrant){window.sidecar.new_registrant=u.data.new_registrant;}
            }
	  // CUSTOMIZATION: Product listing page view event.
      if(b._cevent=="product"){
        u.data.product_id=u.data.product_id || b._cprod.slice(0) || "";
        window.sidecar.product_info={"product_id" : ''+u.data.product_id};
      }
            // Product listing page view event.
            if(b._cevent=="prodlist"){
              u.data.group_id=u.data.group_id || b._ccat[0] || "";
              window.sidecar.product_info={"group_id": u.data.group_id};
            }
      
            // Cart view event.
            if(b._cevent=="cartview"){
              u.data.product_id=u.data.product_id || b._cprod.slice(0);
              u.data.quantity=u.data.quantity || b._cquan.slice(0);
              u.data.unit_price=u.data.unit_price || b._cprice.slice(0);
              window.sidecar.cart_info={};
              window.sidecar.cart_info.items=[];
              for(var i=0; i<u.data.product_id.length; i++){
                window.sidecar.cart_info.items.push({
                  "product_id": u.data.product_id[i],
                  "quantity": u.data.quantity[i],
                  "unit_price": u.data.unit_price[i]
                });
              }
            }
      
            // Empty cart event.
            if(b._cevent=="cartempty"){
              window.sidecar.cart_info={"items": []};
            }
      
            // Purchase event.
            if(u.data.order_id || b._corder){b._cevent="purchase";}
            if(b._cevent=="purchase"){
              u.data.order_id=u.data.order_id || b._corder;
              u.data.subtotal=u.data.subtotal || b._csubtotal || "";
              u.data.tax=u.data.tax || b._ctax || "";
              u.data.shipping=u.data.shipping || b._cship || "";
              // Loop through E-Commerce extension discounts array and sum up the values.
              if(b._cpdisc && b._cpdisc!=""){
                u.data.sumdisc=0;
                for(var i=0; i<b._cpdisc.length; i++){
                  u.data.sumdisc += parseFloat(b._cpdisc[i]).toFixed(2);
                }
                u.data.sumdisc=u.data.sumdisc+"";
              }
              u.data.totaldiscount=u.data.totaldiscount || u.data.sumdisc || "";
              u.data.total=u.data.total || b._ctotal;
              u.data.zipcode=u.data.zipcode || b._czip;
              u.data.product_id=u.data.product_id || b._cprod.slice(0);
              u.data.unit_price=u.data.unit_price || b._cprice.slice(0);
              u.data.quantity=u.data.quantity || b._cquan.slice(0);
              u.data.discounts=u.data.discounts || b._cpdisc.slice(0);
              window.sidecar.transactions={
                "add": "true",
                "data": {
                  "order_id": u.data.order_id,
                  "subtotal": u.data.subtotal,
                  "tax": u.data.tax,
                  "shipping": u.data.shipping,
                  "discounts": u.data.totaldiscount,
                  "total": u.data.total,
                  "zipcode": u.data.zipcode
                },
                "items": [],
                "discounts": []
              };
              for(var i=0; i<u.data.product_id.length; i++){
                window.sidecar.transactions.items.push({
                  "product_id": u.data.product_id[i],
                  "quantity": u.data.quantity[i],
                  "unit_price": u.data.unit_price[i]
                });
              }
              for(var i=0; i<u.data.discounts.length; i++){
                window.sidecar.transactions.discounts.push({
                  "name": "Discount "+i,
                  "amount": u.data.discounts[i]
                });
              }
            }
          /* End Libloader Callback Tag Sending Code */
        };
        /* End Libloader Callback Function */

        /* Start Libloader Function Call */
        /* Un-comment the single-line JavaScript comments ("//") to use Libloader. */
          if (!u.initialized) {
            utag.ut.libloader2({src: "//d3v27wwd40f0xu.cloudfront.net/js/tracking/sidecar_luckyvitamins.js", cb: u.myCallback});
          } else {
            u.myCallback();
          }
        /* End Libloader Function Call */

        //##UTENABLEDEBUG##utag.DB("send:##UTID##:COMPLETE");
      }
    };
    utag.o[loader].loader.LOAD(id);
  })('36', 'luckyvitamin.luckyvitamin');
} catch (e) {
}
//end tealium universal tag
